openapi: 3.1.0
info:
  title: Unofficial Questrade OpenAPI
  version: 0.3.0
  description: 'Community-maintained OpenAPI 3.1 specification for Questrade''s REST
    API.

    Unofficial. Not endorsed by Questrade. Use at your own risk. Keep within API ToS.

    '
  termsOfService: https://www.questrade.com/disclosure/legal-notice-and-disclosures
  contact:
    name: Questrade API Support
    email: apisupport@questrade.com
  license:
    name: "MIT (spec content) \u2014 Questrade trademarks and API remain property\
      \ of Questrade"
    url: https://opensource.org/licenses/MIT
externalDocs:
  description: Official Questrade API documentation
  url: https://www.questrade.com/api/documentation
servers:
- url: https://{host}/v1
  description: API server returned in the OAuth token (api_server)
  variables:
    host:
      default: api01.iq.questrade.com
      description: 'Use the api_server from the token. Example: api01.iq.questrade.com'
security:
- oauth2: []
tags:
- name: Accounts
- name: Orders
- name: Markets
- name: Symbols
components:
  securitySchemes:
    oauth2:
      type: oauth2
      description: 'OAuth2; exchange refresh token for access token. Send Authorization:
        Bearer <token>'
      flows:
        authorizationCode:
          authorizationUrl: https://login.questrade.com/oauth2/authorize
          tokenUrl: https://login.questrade.com/oauth2/token
          scopes: {}
  headers:
    X-RateLimit-Remaining:
      description: Requests remaining in the current window
      schema:
        type: integer
    X-RateLimit-Reset:
      description: Epoch seconds when the window resets
      schema:
        type: integer
        format: int64
  responses:
    TooManyRequests:
      description: Rate limit exceeded
      headers:
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Missing or invalid token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      required:
      - message
      properties:
        code:
          type: integer
        message:
          type: string
    Account:
      type: object
      properties:
        type:
          type: string
          description: Account type (Cash, Margin, Registered...)
        number:
          type: string
          description: Account number
        status:
          type: string
        isPrimary:
          type: boolean
        isBilling:
          type: boolean
        clientAccountType:
          type: string
        userId:
          type: integer
          format: int64
    Balance:
      type: object
      properties:
        currency:
          type: string
        cash:
          type: number
          format: double
        marketValue:
          type: number
          format: double
        totalEquity:
          type: number
          format: double
        buyingPower:
          type: number
          format: double
        maintenanceExcess:
          type: number
          format: double
        isRealTime:
          type: boolean
    Position:
      type: object
      properties:
        symbol:
          type: string
        symbolId:
          type: integer
          format: int64
        openQuantity:
          type: number
          format: double
        closedQuantity:
          type: number
          format: double
        currentMarketValue:
          type: number
          format: double
        currentPrice:
          type: number
          format: double
        averageEntryPrice:
          type: number
          format: double
        closedPnl:
          type: number
          format: double
        openPnl:
          type: number
          format: double
        totalCost:
          type: number
          format: double
        isRealTime:
          type: boolean
        isUnderReorg:
          type: boolean
    AccountActivity:
      type: object
      properties:
        tradeDate:
          type: string
          format: date-time
        transactionDate:
          type: string
          format: date-time
        settlementDate:
          type: string
          format: date-time
        action:
          type: string
        symbol:
          type: string
        symbolId:
          type: integer
          format: int64
        description:
          type: string
        currency:
          type: string
        quantity:
          type: number
          format: double
        price:
          type: number
          format: double
        grossAmount:
          type: number
          format: double
        commission:
          type: number
          format: double
        netAmount:
          type: number
          format: double
        type:
          type: string
    Execution:
      type: object
      properties:
        symbol:
          type: string
        symbolId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64
        side:
          type: string
        price:
          type: number
          format: double
        id:
          type: integer
          format: int64
        orderId:
          type: integer
          format: int64
        orderChainId:
          type: integer
          format: int64
        exchangeExecId:
          type: string
        timestamp:
          type: string
          format: date-time
        notes:
          type: string
        venue:
          type: string
        totalCost:
          type: number
          format: double
        orderPlacementCommission:
          type: number
          format: double
        commission:
          type: number
          format: double
        executionFee:
          type: number
          format: double
        secFee:
          type: number
          format: double
        canadianExecutionFee:
          type: integer
          format: int64
        parentId:
          type: integer
          format: int64
    OrderLeg:
      type: object
      properties:
        symbolId:
          type: integer
          format: int64
        action:
          type: string
        legQuantity:
          type: integer
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        symbol:
          type: string
        symbolId:
          type: integer
          format: int64
        totalQuantity:
          type: integer
        openQuantity:
          type: integer
        filledQuantity:
          type: integer
        canceledQuantity:
          type: integer
        side:
          type: string
        orderType:
          type: string
        limitPrice:
          type: number
          format: double
        stopPrice:
          type: number
          format: double
        isAllOrNone:
          type: boolean
        isAnonymous:
          type: boolean
        icebergQuantity:
          type: integer
        minQuantity:
          type: integer
        avgExecPrice:
          type: number
          format: double
        lastExecPrice:
          type: number
          format: double
        source:
          type: string
        timeInForce:
          type: string
        gtdDate:
          type: string
          format: date-time
        state:
          type: string
        clientReasonStr:
          type: string
        chainId:
          type: integer
          format: int64
        creationTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        notes:
          type: string
        primaryRoute:
          type: string
        secondaryRoute:
          type: string
        orderRoute:
          type: string
        commissionCharged:
          type: number
          format: double
        exchangeOrderId:
          type: string
        isSignificantShareHolder:
          type: boolean
        isInsider:
          type: boolean
        isLimitOffsetInDollar:
          type: boolean
        userId:
          type: integer
          format: int64
        placementCommission:
          type: number
          format: double
        legs:
          type: array
          items:
            $ref: '#/components/schemas/OrderLeg'
        strategyType:
          type: string
        triggerStopPrice:
          type: number
          format: double
        orderGroupId:
          type: integer
          format: int64
        orderClass:
          type: string
        mainChainId:
          type: integer
          format: int64
    StrategyVariantLeg:
      type: object
      properties:
        symbolId:
          type: integer
          format: int64
        action:
          type: string
        ratio:
          type: integer
    StrategyVariantRequest:
      type: object
      properties:
        variantId:
          type: integer
        strategy:
          type: string
        legs:
          type: array
          items:
            $ref: '#/components/schemas/StrategyVariantLeg'
    Market:
      type: object
      properties:
        name:
          type: string
        tradingVenues:
          type: array
          items:
            type: string
        defaultTradingVenue:
          type: string
        primaryOrderRoutes:
          type: array
          items:
            type: string
        secondaryOrderRoutes:
          type: array
          items:
            type: string
        level1Feeds:
          type: array
          items:
            type: string
        level2Feeds:
          type: array
          items:
            type: string
        extendedStartTime:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        extendedEndTime:
          type: string
          format: date-time
        currency:
          type: string
        snapQuotesLimit:
          type: integer
    Candle:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        open:
          type: number
          format: double
        high:
          type: number
          format: double
        low:
          type: number
          format: double
        close:
          type: number
          format: double
        volume:
          type: integer
    Quote:
      type: object
      properties:
        symbol:
          type: string
        symbolId:
          type: integer
          format: int64
        tier:
          type: string
        bidPrice:
          type: number
          format: double
        bidSize:
          type: integer
        askPrice:
          type: number
          format: double
        askSize:
          type: integer
        lastTradePriceTrHrs:
          type: number
          format: double
        lastTradePrice:
          type: number
          format: double
        lastTradeSize:
          type: integer
        lastTradeTick:
          type: string
        lastTradeTime:
          type: string
          format: date-time
        volume:
          type: integer
        openPrice:
          type: number
          format: double
        highPrice:
          type: number
          format: double
        lowPrice:
          type: number
          format: double
        delay:
          type: boolean
        isHalted:
          type: boolean
    OptionQuote:
      type: object
      properties:
        underlying:
          type: string
        underlyingId:
          type: integer
          format: int64
        symbol:
          type: string
        symbolId:
          type: integer
          format: int64
        bidPrice:
          type: number
          format: double
        bidSize:
          type: integer
        askPrice:
          type: number
          format: double
        askSize:
          type: integer
        lastTradePriceTrHrs:
          type: number
          format: double
        lastTradePrice:
          type: number
          format: double
        lastTradeSize:
          type: integer
        lastTradeTick:
          type: string
        lastTradeTime:
          type: string
          format: date-time
        volume:
          type: integer
        openPrice:
          type: number
          format: double
        highPrice:
          type: number
          format: double
        lowPrice:
          type: number
          format: double
        volatility:
          type: number
          format: double
        delta:
          type: number
          format: double
        gamma:
          type: number
          format: double
        theta:
          type: number
          format: double
        vega:
          type: number
          format: double
        rho:
          type: number
          format: double
        openInterest:
          type: integer
        delay:
          type: integer
        isHalted:
          type: boolean
        VWAP:
          type: number
          format: double
    Symbol:
      type: object
      properties:
        symbol:
          type: string
        symbolId:
          type: integer
          format: int64
        description:
          type: string
        securityType:
          type: string
        listingExchange:
          type: string
        isTradable:
          type: boolean
        isQuotable:
          type: boolean
        currency:
          type: string
    SymbolDetail:
      type: object
      properties:
        symbol:
          type: string
        symbolId:
          type: integer
          format: int64
        prevDayClosePrice:
          type: number
          format: double
        highPrice52:
          type: number
          format: double
        lowPrice52:
          type: number
          format: double
        averageVol3Months:
          type: integer
        averageVol20Days:
          type: integer
        outstandingShares:
          type: integer
    OptionChain:
      type: object
      properties:
        expiryDate:
          type: string
          format: date
        description:
          type: string
        listingExchange:
          type: string
        optionExerciseType:
          type: string
        chainPerRoot:
          type: array
          items:
            type: object
            properties:
              root:
                type: string
              chainPerStrikePrice:
                type: array
                items:
                  type: object
                  properties:
                    strikePrice:
                      type: number
                      format: double
                    callSymbolId:
                      type: integer
                      format: int64
                    putSymbolId:
                      type: integer
                      format: int64
              multiplier:
                type: integer
paths:
  /time:
    get:
      tags:
      - Accounts
      summary: Get server time
      description: Returns current server time.
      responses:
        '200':
          description: Server time
          headers:
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                type: object
                properties:
                  time:
                    type: string
                    format: date-time
  /accounts:
    get:
      tags:
      - Accounts
      summary: Get accounts
      description: Returns accounts linked to the token.
      security:
      - oauth2: []
      responses:
        '200':
          description: List of accounts
          headers:
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /accounts/{id}/activities:
    get:
      tags:
      - Accounts
      summary: Get account activities
      description: Transactions, dividends, trades, etc.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: startTime
        in: query
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Activities
          headers:
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                type: object
                properties:
                  activities:
                    type: array
                    items:
                      $ref: '#/components/schemas/AccountActivity'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /accounts/{id}/balances:
    get:
      tags:
      - Accounts
      summary: Get account balances
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Balances
          headers:
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                type: object
                properties:
                  perCurrencyBalances:
                    type: array
                    items:
                      $ref: '#/components/schemas/Balance'
                  combinedBalances:
                    type: array
                    items:
                      $ref: '#/components/schemas/Balance'
                  sodPerCurrencyBalances:
                    type: array
                    items:
                      $ref: '#/components/schemas/Balance'
                  sodCombinedBalances:
                    type: array
                    items:
                      $ref: '#/components/schemas/Balance'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /accounts/{id}/positions:
    get:
      tags:
      - Accounts
      summary: Get positions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Positions
          content:
            application/json:
              schema:
                type: object
                properties:
                  positions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Position'
  /accounts/{id}/executions:
    get:
      tags:
      - Accounts
      summary: Get executions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: startTime
        in: query
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Executions
          content:
            application/json:
              schema:
                type: object
                properties:
                  executions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Execution'
  /accounts/{id}/orders:
    get:
      tags:
      - Orders
      summary: Get orders
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: startTime
        in: query
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        schema:
          type: string
          format: date-time
      - name: stateFilter
        in: query
        schema:
          type: string
          enum:
          - All
          - Open
          - Closed
      - name: orderId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
    post:
      tags:
      - Orders
      summary: Place order
      description: Create a single or multi-leg order.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Order placed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /accounts/{id}/orders/{orderId}:
    delete:
      tags:
      - Orders
      summary: Cancel order
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: orderId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Cancelled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /accounts/{id}/orders/strategy:
    post:
      tags:
      - Orders
      summary: Place multi-leg strategy order
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                symbolId:
                  type: integer
                limitPrice:
                  type: number
                orderType:
                  type: string
                timeInForce:
                  type: string
                primaryRoute:
                  type: string
                secondaryRoute:
                  type: string
                legs:
                  type: array
                  items:
                    $ref: '#/components/schemas/OrderLeg'
                strategy:
                  type: string
      responses:
        '200':
          description: Order accepted
  /accounts/{id}/orders/strategy/impact:
    post:
      tags:
      - Orders
      summary: Estimate strategy impact
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StrategyVariantRequest'
      responses:
        '200':
          description: Impact details
  /markets:
    get:
      tags:
      - Markets
      summary: Get markets
      responses:
        '200':
          description: Markets
          content:
            application/json:
              schema:
                type: object
                properties:
                  markets:
                    type: array
                    items:
                      $ref: '#/components/schemas/Market'
  /markets/quotes/{id}:
    get:
      tags:
      - Markets
      summary: Get L1 quote by symbolId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Quotes
          content:
            application/json:
              schema:
                type: object
                properties:
                  quotes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Quote'
  /markets/quotes:
    get:
      tags:
      - Markets
      summary: Get L1 quotes by ids
      parameters:
      - name: ids
        in: query
        description: Comma-separated symbol IDs
        schema:
          type: array
          items:
            type: integer
          style: form
          explode: false
      responses:
        '200':
          description: Quotes
          content:
            application/json:
              schema:
                type: object
                properties:
                  quotes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Quote'
  /markets/candles/{id}:
    get:
      tags:
      - Markets
      summary: Get historical candles
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: startTime
        in: query
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        schema:
          type: string
          format: date-time
      - name: interval
        in: query
        description: Candle interval
        schema:
          type: string
      responses:
        '200':
          description: Candles
          content:
            application/json:
              schema:
                type: object
                properties:
                  candles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Candle'
  /markets/quotes/options:
    post:
      tags:
      - Markets
      summary: Get option quotes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  items:
                    type: object
                    properties:
                      optionType:
                        type: string
                      underlyingId:
                        type: integer
                      expiryDate:
                        type: string
                        format: date
                      minstrikePrice:
                        type: number
                      maxstrikePrice:
                        type: number
                optionIds:
                  type: array
                  items:
                    type: integer
      responses:
        '200':
          description: Option quotes
          content:
            application/json:
              schema:
                type: object
                properties:
                  optionQuotes:
                    type: array
                    items:
                      $ref: '#/components/schemas/OptionQuote'
  /markets/quotes/strategies:
    post:
      tags:
      - Markets
      summary: Get strategy quotes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                variants:
                  type: array
                  items:
                    $ref: '#/components/schemas/StrategyVariantRequest'
      responses:
        '200':
          description: Strategy quotes
  /symbols/search:
    get:
      tags:
      - Symbols
      summary: Search symbols
      parameters:
      - name: prefix
        in: query
        required: true
        schema:
          type: string
      - name: offset
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: Symbols
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbols:
                    type: array
                    items:
                      $ref: '#/components/schemas/Symbol'
  /symbols/{id}/options:
    get:
      tags:
      - Symbols
      summary: Get option chain
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Option chain
          content:
            application/json:
              schema:
                type: object
                properties:
                  options:
                    type: array
                    items:
                      $ref: '#/components/schemas/OptionChain'
  /symbols:
    get:
      tags:
      - Symbols
      summary: Get symbols by ids or names
      description: Retrieves detailed information about one or more symbols. Either
        `ids` or `names` may be provided, not both.
      parameters:
      - name: ids
        in: query
        schema:
          type: array
          items:
            type: integer
          style: form
          explode: false
        description: Comma-separated list of symbol IDs
      - name: names
        in: query
        schema:
          type: array
          items:
            type: string
          style: form
          explode: false
        description: Comma-separated list of symbol names
      responses:
        '200':
          description: Symbol details
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbols:
                    type: array
                    items:
                      $ref: '#/components/schemas/SymbolDetail'
